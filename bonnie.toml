version="0.3.2"

[scripts]
dev.subcommands.cli.cmd = [
	"cd packages/perseus-cli",
    # We need to copy in the directory where we actually work on the subcrate
    "rm -rf ./.perseus",
    "cp -r ../../examples/cli/.perseus/ .perseus/",
    "mv .perseus/Cargo.toml .perseus/Cargo.toml.old",
    "mv .perseus/server/Cargo.toml .perseus/server/Cargo.toml.old",
	"cargo run -- %%"
]
dev.subcommands.cli.desc = "runs the cli in its own directory (which should test `examples/basic`)"
dev.subcommands.example.cmd = [
    "cd packages/perseus-cli",
    # We need to copy in the directory where we actually work on the subcrate
    "rm -rf ./.perseus",
    "cp -r ../../examples/cli/.perseus/ .perseus/",
    "mv .perseus/Cargo.toml .perseus/Cargo.toml.old",
    "mv .perseus/server/Cargo.toml .perseus/server/Cargo.toml.old",
    # Now point this live version of the CLI at the given example
    "TEST_EXAMPLE=../../examples/%example cargo run -- %%"
]
dev.subcommands.example.args = [ "example" ]
dev.subcommands.example.desc = "serves the given example using a live version of the cli"

build = "cargo build"
test = "cargo watch -x \"test\""
check = "cargo check && cargo fmt -- --check && cargo clippy && cargo test" # This will be run on CI as well
# Hosts the book locally
doc.cmd = [
	"cd docs",
	"mdbook serve"
]
doc.desc = "hosts the book locally at http://localhost:3000"

# Releases the project (maintainers only)
# We commit all staged files so we can manually bump the Cargo version
release.cmd = "standard-version --sign --commit-all && git push --follow-tags %% origin main"
release.desc = "creates a new project release and pushes it to github (cargo version must be manually bumped)"

# Publishes each package
publish.cmd = [
    "cd packages/perseus",
    "cargo publish %%",
    # The CLI needs the `.perseus/` directory copied in for packaging (and we need to rename `Cargo.toml` to `Cargo.toml.old`)
    "cd ../perseus-cli",
    "rm -rf ./.perseus",
    "cp -r ../../examples/cli/.perseus/ .perseus/",
    "mv .perseus/Cargo.toml .perseus/Cargo.toml.old",
    "mv .perseus/server/Cargo.toml .perseus/server/Cargo.toml.old",
    "cargo publish --allow-dirty %%", # Without this flag, `.perseus` will be a problem because it's not in Git
    # We delay this so that `crates.io` can have time to host the core
    "cd ../perseus-actix-web",
    "cargo publish %%"
]
publish.desc = "publishes all packages to crates.io"
